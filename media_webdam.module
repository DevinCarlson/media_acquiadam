<?php

/**
 * @file
 * Integrates Drupal with Webdam.
 */

/**
 * Implements hook_theme().
 */
function media_webdam_theme($existing, $type, $theme, $path) {
  return [
    'asset_details' => [
      'variables' => [
        'asset_data' => [],
        'asset_preview' => NULL,
        'asset_link' => NULL,
      ],
    ],
    'checkboxes__webdam_assets' => [
      'render element' => 'element',
      'template' => 'checkboxes--webdam-assets',
    ],
  ];
}

/**
 * Implements hook_entity_type_alter().
 */
function media_webdam_entity_type_alter(array &$entity_types) {
  /** #var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['user']->setLinkTemplate('webdam-auth-form', '/user/{user}/webdam');
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Hides the 'Webdam' tab on the user profile if the user is not viewing their
 * own profile.
 */
function media_webdam_menu_local_tasks_alter(&$data, $route_name) {
  if ($route_name == 'entity.user.canonical') {
    foreach ($data['tabs'][0] as $key => $link) {
      if (
        $link['#link']['url']->getRouteName() == 'entity.user.webdam_auth' &&
        $link['#link']['url']->getRouteParameters()['user'] != \Drupal::currentUser()->id()
      ) {
        unset($data['tabs'][0][$key]);
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Allow custom markup for webdam asset checkboxes
 */
function media_webdam_preprocess_checkboxes__webdam_assets(&$variables) {
  $element = $variables['element'];
  $variables['children'] = $element['#children'];
  $variables['element']['#theme'] = 'checkboxes__webdam_assets';
  ksm($variables);
}
